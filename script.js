let timer = document.querySelector('.timer');
let holes = document.querySelectorAll('.hole');
let score = document.querySelector('.score');
let button = document.querySelector('button');
let moles = document.querySelectorAll('.mole');
let lastIndex;
let countDown_timer;
let popUp_timer;
let timeOver = false;
let gameTimer;

//Function for the Timer
function countDown() {
    countDown_timer = setInterval(() => {
        // If timer = 0 stop the timer
        if (timer.textContent == 0) {
            clearInterval(countDown_timer)
            return;
        }
        // timer - 1 per every second
        timer.textContent--    }, 1000);
}

// Function to make the moles pop up
function popUp() {
    // holeIndex = random index generated by randompopup function
    let holeIndex = randomPopUp();

    //Random time-taken for the moles to popup
    const randomtime = randomTimer(2000, 500);

    // add "up" to the classname with the index holeindex
    holes[holeIndex].classList.add("up");

    //Setting a Timeout function to remove "up" from the classname with index holeindex every second (according to the dependecy seconds stated)
    popUp_timer = setTimeout(() => {
        holes[holeIndex].classList.remove("up");

        //If timeover is false run popup
        if (timeOver == false) {
            popUp();
        }
        //OR
        // if(!timeOver) popUp();
    }, randomtime);
}

//Funtion for the moles to pop up at random (with the use of their index)
function randomPopUp() {
    // index = run down(random number(ie. btn 0 and 1) x number of holes) eg run down(0.45737 x 6)
    let index = Math.floor(Math.random() * holes.length);

    //If last index is the same as the new index(resent) run the function random popup again and return a new index
    if (lastIndex == index) {
        return randomPopUp();
    }
    lastIndex = index;
    return index;
}
function randomTimer(maximum = 1000, minimum = 100) {
    //PopUpTime cant be less that a 100 millisecond and cant be more that 1000 millisecons/ 1second 
    const popUpTime = Math.round(Math.random() * (maximum - minimum) + minimum);
    return popUpTime;
}

// setting the play sound
function playPop() {
    const audio = new Audio("pop.mp3");
    audio.currentTime = 0;
    audio.play();
}

function whack(event) {
    // checking the bot or checking if the gamer is not a bot   
    //whack event is not trusted(from bot) 
    if (!event.isTrusted) return;
    score.textContent++;
    playPop();
    // We are using parentNode because we are targetting the parent of the moles ie the holes
    this.parentNode.classList.remove("up");
}

function startGame() {
    holes.forEach(hole => hole.classList.remove("up"));
    score.textContent = 0;
    timer.textContent = 10;
    timeOver = false;
    clearInterval(countDown_timer);
    clearTimeout(popUp_timer);
    clearTimeout(gameTimer);
    popUp();
    countDown();
    //Game should go off after 10 seconds/ 10000 millisecond +++++ timeOver = true at 10 seconds
    gameTimer = setTimeout(() => timeOver = true, 10000);
}

moles.forEach(mole => mole.addEventListener("click", whack));
button.addEventListener("click", startGame);